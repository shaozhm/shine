using Core as EPM;
using Util;


context MD {

Type HistT {
        CREATEDBY : Association to Employees;
        CREATEDAT : EPM.SDate;
        CHANGEDBY : Association to Employees;
        CHANGEDAT : EPM.SDate; 
    };
    
 Type NameT {
        FIRST : EPM.SString;
        MIDDLE : EPM.SString;
        LAST : EPM.SString;
        INITIALS : EPM.BusinessKey;
      };
 type SexT : String(1);
	@Comment: 'Addresses entity'
    Entity Addresses {
    	@Comment: 'Address ID'
        key  ADDRESSID: EPM.BusinessKey;
        @Comment: 'City'
        CITY: EPM.SString;
        @Comment: 'Postal Code'
        POSTALCODE: EPM.BusinessKey;
        @Comment: 'Street'
        STREET: EPM.MString;
        @Comment: 'Building'
        BUILDING: EPM.BusinessKey;
        @Comment: 'Country'
        COUNTRY: String(3);
        @Comment: 'Region'
        REGION: String(4);
        @Comment: 'Address Type'
        ADDRESSTYPE: String(2);
        VALIDITY: EPM.ValidityT; 
        @Comment: 'Latitude'
        LATITUDE: Double;
        @Comment: 'Longitude'
        LONGITUDE: Double; 
		       
    } technical configuration {
    	unload priority 8;
    };
    @Comment: 'Buisness Partner entity'
    Entity BusinessPartner {
    	@Comment: 'Partner ID'
        key  PARTNERID: EPM.BusinessKey;
        @Comment: 'Partner Role'
        PARTNERROLE: String(3); //Business Partner Role
        @Comment: 'Partner EmailID'
        EMAILADDRESS: EPM.LString;
        @Comment: 'Partner Phone Number'
        PHONENUMBER: EPM.PhoneT;
        @Comment: 'Partner Fax Number'
        FAXNUMBER: EPM.PhoneT null;
        @Comment: 'Partner Website'
        WEBADDRESS: EPM.VLString;
        ADDRESSES: Association to Addresses;
        @Comment: 'Partner Company Name'
        COMPANYNAME: String(80);
        @Comment: 'Partner Legal Form'
        LEGALFORM: EPM.BusinessKey;
        HISTORY: HistT;
        @Comment: 'Partner Currency Code'
        CURRENCY: EPM.CurrencyT;
    } technical configuration {
    	partition by HASH  (PARTNERID) Partitions GET_NUM_SERVERS();
    };
 
    Entity Employees {
        key  EMPLOYEEID: EPM.BusinessKey;
        NAME: NameT null;
        SEX: SexT;
        LANGUAGE: EPM.ABAPLanguage;
        PHONENUMBER: EPM.PhoneT null;
        EMAILADDRESS: EPM.LString;
        LOGINNAME: String(12);
        ADDRESSES: Association to Addresses null;
        VALIDITY: EPM.ValidityT; 
        CURRENCY: EPM.CurrencyT;                
        SALARYAMOUNT: EPM.AmountT;
        ACCOUNTNUMBER: EPM.BusinessKey;
        BANKID: EPM.BusinessKey;
        BANKNAME: EPM.LString;
        EMPLOYEEPICURL: EPM.LString;
        FULLNAME: String(100) = NAME.FIRST || ' ' || NAME.LAST;
    };

    Entity Products {
        key  PRODUCTID: EPM.BusinessKey; 
		TYPECODE: String(2);
		CATEGORY: EPM.SString;
        HISTORY: HistT;
        NAMEID: EPM.BusinessKey;
        DESCID: EPM.BusinessKey;
        SUPPLIER: Association to MD.BusinessPartner;
        TAXTARIFFCODE: Integer;
        QUANTITYUNIT: EPM.UnitT;
        WEIGHTMEASURE: EPM.QuantityT;
        WEIGHTUNIT: EPM.UnitT; 
        CURRENCY: EPM.CurrencyT;
        PRICE: EPM.AmountT;
        PRODUCTPICURL: EPM.LString null;
        WIDTH: EPM.QuantityT;
        DEPTH: EPM.QuantityT;
        HEIGHT: EPM.QuantityT;
        DIMENSIONUNIT: EPM.UnitT;
    } technical configuration {
    	fulltext index FTI_CATEGORY on (CATEGORY) ASYNC SEARCH ONLY off; 
    };

    Entity productLog{
     key PRODUCTID: String(10);
     key LOGID: Integer;
     key DATETIME: UTCDateTime;
     key USERNAME: String(20);
	 LOGTEXT: String(500);
    }; 
 
}; 
